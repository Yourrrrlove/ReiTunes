@page "/"

@using ReiTunes.Core
@inject Library MusicLibrary
@inject LibrarySettings Settings

<h2>@_title</h2>

<audio controls src="@_audioUri" autoplay="true" class="w-full">
    Your browser does not support the<code>audio</code> element.
</audio>

<div class="@(_showStatus ? "" : "hidden")">
    <div>@_status</div>
    <progress class="w-full" value=@_statusProgress max=100></progress>
</div>


@foreach (LibraryItem item in MusicLibrary.Items)
{
    <button class="bg-blue-600 hover:bg-blue-700 text-white font-bold m-1 py-2 px-4 border border-blue-700 rounded"
    @onclick="() => ItemClicked(item)">
        @item.Name
    </button>
}

@code {

    private readonly Uri _cloudBaseUri = new Uri("https://reitunes.blob.core.windows.net/music/");

    private string _title = "Default Title";
    private string _audioUri = "";

    private bool _showStatus = false;
    private string _status = "";

    private int _statusProgress = 0;

    private void HideStatus()
    {
        _showStatus = false;
        _status = "";
        _statusProgress = 0;
    }

    private void ShowStatus(string status)
    {
        _showStatus = true;
        _status = status;
        _statusProgress = 0;
    }

    private async Task ItemClicked(LibraryItem item)
    {
        Console.WriteLine($"Click handler for {item.Name}");

        var expectedPath = Path.Combine(Settings.MusicFileLocation, item.FilePath);

        if (!File.Exists(expectedPath))
        {
            var downloadFileUrl = new Uri(_cloudBaseUri, item.FilePath).ToString();

            ShowStatus($"Downloading {item.Name}...");

            Console.WriteLine($"Downloading {item.Name} from {downloadFileUrl}");

            using var client = new HttpClientDownloadWithProgress(downloadFileUrl, expectedPath);
            client.ProgressChanged += (totalFileSize, totalBytesDownloaded, progressPercentage) =>
            {
                _statusProgress = (int) progressPercentage;
                StateHasChanged();
                Console.WriteLine($"{progressPercentage}% ({totalBytesDownloaded}/{totalFileSize})");
            };

            await client.Download();
            Console.WriteLine($"Downloaded file to {expectedPath}");

            HideStatus();
        }

        _title = $"{item.Name} - {item.Artist}";
        _audioUri = $"musiclibrary/{item.FilePath}";
    }
}
